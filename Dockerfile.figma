# Build args (optional overrides)
ARG APP_URL=https://figma.com
ARG APP_NAME=figma

# ========== Builder: Node + nativefier ==========
FROM node:20-bookworm-slim AS builder
ARG APP_URL
ARG APP_NAME
ENV APP_URL=${APP_URL} APP_NAME=${APP_NAME}

# 1-3) Install NodeJS, npm (from base), and nativefier
RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates && rm -rf /var/lib/apt/lists/*
RUN npm install -g nativefier

# 4) Build the app with nativefier
WORKDIR /build
RUN mkdir out

RUN nativefier "${APP_URL}" --name "${APP_NAME}" --single-instance --honest --platform linux --out /build/out
RUN mv "/build/figma-linux-arm64" /build/out/app

# ========== Runtime: minimal Debian with Electron deps ==========
FROM debian:bookworm-slim

# Electron runtime deps
RUN apt-get update && apt-get install -y --no-install-recommends \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libcairo2 \
    libcups2 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libx11-6 \
    libx11-xcb1 \
    libxcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxrender1 \
    libxss1 \
    libxtst6 \
    fonts-liberation \
    ca-certificates \
 && rm -rf /var/lib/apt/lists/*

# 5) Copy built app (architecture-agnostic path)
COPY --from=builder /build/out/app /opt/figma/app

# Run as non-root to avoid Electron --no-sandbox
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /opt/figma
USER appuser

# 6) Default run
WORKDIR /opt/figma/app
CMD ["./figma", "--no-sandbox", "--disable-gpu", "--disable-dev-shm-usage"]